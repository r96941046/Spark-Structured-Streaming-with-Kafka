{"paragraphs":[{"text":"%pyspark\nprint spark","user":"anonymous","dateUpdated":"2018-03-13T03:48:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.session.SparkSession object at 0x7f286a9aa8d0>\n"}]},"apps":[],"jobName":"paragraph_1520822341881_-1695669927","id":"20180312-023901_1179934232","dateCreated":"2018-03-12T02:39:01+0000","dateStarted":"2018-03-13T03:49:00+0000","dateFinished":"2018-03-13T03:49:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:365"},{"text":"%pyspark\n# Create dataframe representing stream of output from Kafka\ndf = spark.readStream.format('kafka').option('kafka.bootstrap.servers', 'sandbox-hdp.hortonworks.com:6667').option('subscribe', 'tweets').load()\ndf","user":"anonymous","dateUpdated":"2018-03-13T03:50:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: binary, value: binary, topic: string, partition: int, offset: bigint, timestamp: timestamp, timestampType: int]\n"}]},"apps":[],"jobName":"paragraph_1520572749020_-1821785006","id":"20180309-051909_1897163451","dateCreated":"2018-03-09T05:19:09+0000","dateStarted":"2018-03-13T03:50:04+0000","dateFinished":"2018-03-13T03:50:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:366"},{"text":"%pyspark\ndf.isStreaming","user":"anonymous","dateUpdated":"2018-03-13T03:50:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"True\n"}]},"apps":[],"jobName":"paragraph_1520835684985_776000665","id":"20180312-062124_920112780","dateCreated":"2018-03-12T06:21:24+0000","dateStarted":"2018-03-13T03:50:11+0000","dateFinished":"2018-03-13T03:50:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:367"},{"text":"%pyspark\n# Select desired columns from the dataframe\nds = df.selectExpr('CAST(key AS STRING)', 'timestamp', 'CAST(value AS STRING)')\nds","user":"anonymous","dateUpdated":"2018-03-13T03:50:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: string, timestamp: timestamp, value: string]\n"}]},"apps":[],"jobName":"paragraph_1520576756578_-701277502","id":"20180309-062556_719306702","dateCreated":"2018-03-09T06:25:56+0000","dateStarted":"2018-03-13T03:50:16+0000","dateFinished":"2018-03-13T03:50:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:368"},{"text":"%pyspark\nprint ds.schema","user":"anonymous","dateUpdated":"2018-03-13T03:50:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(key,StringType,true),StructField(timestamp,TimestampType,true),StructField(value,StringType,true)))\n"}]},"apps":[],"jobName":"paragraph_1520575890921_-1874218723","id":"20180309-061130_1402804576","dateCreated":"2018-03-09T06:11:30+0000","dateStarted":"2018-03-13T03:50:21+0000","dateFinished":"2018-03-13T03:50:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:369"},{"text":"%pyspark\n# debugging, write stream to memory\ntweetquery = ds.writeStream.queryName('tweettable').format('memory').start()\ntweetquery","user":"anonymous","dateUpdated":"2018-03-13T03:50:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.streaming.StreamingQuery object at 0x7f2868197750>\n"}]},"apps":[],"jobName":"paragraph_1520576875181_-698235616","id":"20180309-062755_678234353","dateCreated":"2018-03-09T06:27:55+0000","dateStarted":"2018-03-13T03:50:26+0000","dateFinished":"2018-03-13T03:50:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:370"},{"text":"%pyspark\n# getting stream sample from table\nsample = spark.sql('select * from tweettable')\nsample.show()","user":"anonymous","dateUpdated":"2018-03-13T03:50:39+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------------------+--------------------+\n| key|           timestamp|               value|\n+----+--------------------+--------------------+\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"es\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|\n+----+--------------------+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1520576364849_379914525","id":"20180309-061924_1418920442","dateCreated":"2018-03-09T06:19:24+0000","dateStarted":"2018-03-13T03:50:39+0000","dateFinished":"2018-03-13T03:50:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:371"},{"text":"%pyspark\nfrom pyspark.sql.functions import col, from_json\n# extract json schema from the column 'value' in sample dataframe\njson_schema = spark.read.json(sample.rdd.map(lambda row: row.value)).schema\n# to test if the schema is ok, create new column in sample dataframe\nsample = sample.withColumn('json', from_json(col('value'), json_schema))\nsample.show()","user":"anonymous","dateUpdated":"2018-03-13T03:50:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------------------+--------------------+--------------------+\n| key|           timestamp|               value|                json|\n+----+--------------------+--------------------+--------------------+\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:49...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:49...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:49...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:49...|\n|null|2018-03-13 03:50:...|{\"lang\": \"es\", \"c...|[Tue Mar 13 03:48...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:45...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:45...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:45...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:44...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:44...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:42...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:42...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:42...|\n|null|2018-03-13 03:50:...|{\"lang\": \"en\", \"c...|[Tue Mar 13 03:42...|\n|null|2018-03-13 03:50:...|{\"lang\": \"ja\", \"c...|[Tue Mar 13 03:41...|\n+----+--------------------+--------------------+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1520576272332_-1516298265","id":"20180309-061752_1684505541","dateCreated":"2018-03-09T06:17:52+0000","dateStarted":"2018-03-13T03:50:44+0000","dateFinished":"2018-03-13T03:50:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:372"},{"text":"%pyspark\n# for testing purposes, it's also possible to run queries through the memory sink in Zeppelin to see the streaming in action\nsample.count()","user":"anonymous","dateUpdated":"2018-03-13T03:50:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"30\n"}]},"apps":[],"jobName":"paragraph_1520829258545_714046298","id":"20180312-043418_1854034352","dateCreated":"2018-03-12T04:34:18+0000","dateStarted":"2018-03-13T03:50:59+0000","dateFinished":"2018-03-13T03:50:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:373"},{"text":"%pyspark\n# streaming data can be observed\nsample.count()","user":"anonymous","dateUpdated":"2018-03-13T03:51:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"45\n"}]},"apps":[],"jobName":"paragraph_1520829345068_695348488","id":"20180312-043545_958489450","dateCreated":"2018-03-12T04:35:45+0000","dateStarted":"2018-03-13T03:51:13+0000","dateFinished":"2018-03-13T03:51:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:374"},{"text":"%pyspark\n# now that we have the json schema, let's get back to the original streaming dataframe, ds, and create the json column\nds = ds.withColumn('json', from_json(col('value'), json_schema))\nds","user":"anonymous","dateUpdated":"2018-03-13T03:51:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: string, timestamp: timestamp, value: string, json: struct<created_at:string,favorite_count:bigint,favorited:boolean,id:bigint,id_str:string,lang:string,retweet_count:bigint,retweeted:boolean,text:string>]\n"}]},"apps":[],"jobName":"paragraph_1520824635845_1761946369","id":"20180312-031715_375442829","dateCreated":"2018-03-12T03:17:15+0000","dateStarted":"2018-03-13T03:51:23+0000","dateFinished":"2018-03-13T03:51:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:375"},{"text":"%pyspark\nfrom pyspark.sql.functions import explode, split\n# Split tweet text into words\nwords = ds.select(\n    explode(\n        split(ds.json.text, ' ')\n    ).alias('word')\n)","user":"anonymous","dateUpdated":"2018-03-13T03:51:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520576989486_448116892","id":"20180309-062949_1274433372","dateCreated":"2018-03-09T06:29:49+0000","dateStarted":"2018-03-13T03:51:29+0000","dateFinished":"2018-03-13T03:51:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:376"},{"text":"%pyspark\n# generate running word count in the result table wordCount\nwordCount = words.groupby(\n    words.word\n).count()","user":"anonymous","dateUpdated":"2018-03-13T03:51:33+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520829444778_1355916377","id":"20180312-043724_278815297","dateCreated":"2018-03-12T04:37:24+0000","dateStarted":"2018-03-13T03:51:33+0000","dateFinished":"2018-03-13T03:51:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:377"},{"text":"%pyspark\nwordCountsQuery = wordCount.writeStream.outputMode('complete').queryName('wordCountsNoWindow').format('memory').start()","user":"anonymous","dateUpdated":"2018-03-13T03:51:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520829444013_269770232","id":"20180312-043724_1581116162","dateCreated":"2018-03-12T04:37:24+0000","dateStarted":"2018-03-13T03:51:40+0000","dateFinished":"2018-03-13T03:51:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:378"},{"text":"%pyspark\n# let's see the wordCounts result\nresult = spark.sql('select * from wordCountsNoWindow')\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-13T03:53:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+-----+\n|word                              |count|\n+----------------------------------+-----+\n|spyware                           |5    |\n|vivir                             |5    |\n|pipeline                          |9    |\n|scale:                            |5    |\n|scale                             |9    |\n|Data                              |4    |\n|experimental                      |4    |\n|https://t.co/h7cMtBeOcK           |5    |\n|Processing                        |5    |\n|code                              |5    |\n|視聴動画につきましては、こちらをご覧くださいませ！「AIKATSU！|5    |\n|@1                                |2    |\n|new                               |5    |\n|own                               |5    |\n|Security                          |5    |\n|Sometimes                         |5    |\n|@apachekafka:                     |4    |\n|こんなにガードできるならきもちいかも！               |5    |\n|bend;                             |5    |\n|@kafka___                         |6    |\n+----------------------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520829797927_1324243253","id":"20180312-044317_1944344189","dateCreated":"2018-03-12T04:43:17+0000","dateStarted":"2018-03-13T03:53:54+0000","dateFinished":"2018-03-13T03:53:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:379"},{"text":"%pyspark\n# print the result again to show the differences\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-13T03:54:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------+-----+\n|word                              |count|\n+----------------------------------+-----+\n|spyware                           |11   |\n|vivir                             |11   |\n|pipeline                          |21   |\n|en                                |6    |\n|scale:                            |11   |\n|scale                             |21   |\n|Data                              |10   |\n|experimental                      |10   |\n|https://t.co/h7cMtBeOcK           |11   |\n|Processing                        |11   |\n|code                              |11   |\n|視聴動画につきましては、こちらをご覧くださいませ！「AIKATSU！|11   |\n|@1                                |12   |\n|new                               |11   |\n|own                               |11   |\n|@kafka_math                       |4    |\n|Security                          |11   |\n|Sometimes                         |11   |\n|@apachekafka:                     |10   |\n|こんなにガードできるならきもちいかも！               |11   |\n+----------------------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520843447791_-1342275485","id":"20180312-083047_441154557","dateCreated":"2018-03-12T08:30:47+0000","dateStarted":"2018-03-13T03:54:56+0000","dateFinished":"2018-03-13T03:54:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:380"},{"text":"%pyspark\nresult.count()","user":"anonymous","dateUpdated":"2018-03-13T03:54:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"145\n"}]},"apps":[],"jobName":"paragraph_1520843469910_1173258797","id":"20180312-083109_2123597469","dateCreated":"2018-03-12T08:31:09+0000","dateStarted":"2018-03-13T03:54:36+0000","dateFinished":"2018-03-13T03:54:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:381"},{"text":"%pyspark\nfrom pyspark.sql.functions import explode, split\n# Add timestamp to test window aggregating\n# Split tweet text into words\nwordsWithTimestamp = ds.select(\n    ds.timestamp,\n    explode(\n        split(ds.json.text, ' ')\n    ).alias('word')\n)","user":"anonymous","dateUpdated":"2018-03-13T03:55:24+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520843272650_-1067209025","id":"20180312-082752_1756640292","dateCreated":"2018-03-12T08:27:52+0000","dateStarted":"2018-03-13T03:55:24+0000","dateFinished":"2018-03-13T03:55:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:382"},{"text":"%pyspark\nfrom pyspark.sql.functions import window\n# generate running word count in the result table wordCount\nwordCountWithTimestamp = wordsWithTimestamp.withWatermark(\n    'timestamp',\n    '10 minutes'\n    ).groupby(\n        window(wordsWithTimestamp.timestamp, '10 minutes', '5 minutes'),\n        wordsWithTimestamp.word\n    ).count()","user":"anonymous","dateUpdated":"2018-03-13T03:56:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520843305430_-1891863836","id":"20180312-082825_1332752664","dateCreated":"2018-03-12T08:28:25+0000","dateStarted":"2018-03-13T03:56:11+0000","dateFinished":"2018-03-13T03:56:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:383"},{"text":"%pyspark\nwordCountsQueryWindowed = wordCountWithTimestamp.writeStream.outputMode('update').queryName('wordCounts').format('memory').start()","user":"anonymous","dateUpdated":"2018-03-13T03:56:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520843342319_-2069171782","id":"20180312-082902_196080245","dateCreated":"2018-03-12T08:29:02+0000","dateStarted":"2018-03-13T03:56:54+0000","dateFinished":"2018-03-13T03:56:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:384"},{"text":"%pyspark\n# let's see the wordCounts result\nresultWindowed = spark.sql('select * from wordCounts')\nresultWindowed.show(20, False)","user":"anonymous","dateUpdated":"2018-03-13T04:05:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------------------------------+-----------------------+-----+\n|window                                       |word                   |count|\n+---------------------------------------------+-----------------------+-----+\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|influenced             |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/U01nyB6M7y|9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/jWQDd1pTxp|9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|idiota                 |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|“Ölümün                |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|firehose:              |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|Queries                |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|terrifyingly           |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|and                    |24   |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|request                |8    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@DasdemirHilmi:        |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@UberEng:              |8    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@A5Jn56:               |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/DQyMiQPywq|9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|veterans               |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|not                    |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|me                     |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|kendisine              |1    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|hub                    |6    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|poquedad               |9    |\n+---------------------------------------------+-----------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520843426349_-836346005","id":"20180312-083026_2088170957","dateCreated":"2018-03-12T08:30:26+0000","dateStarted":"2018-03-13T04:05:50+0000","dateFinished":"2018-03-13T04:05:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:385"},{"text":"%pyspark\n# print the result again to show the differences\nresultWindowed.show(20, False)","user":"anonymous","dateUpdated":"2018-03-13T04:11:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------------------------------+-----------------------+-----+\n|window                                       |word                   |count|\n+---------------------------------------------+-----------------------+-----+\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|influenced             |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/U01nyB6M7y|9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/jWQDd1pTxp|9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|idiota                 |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|“Ölümün                |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|firehose:              |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|Queries                |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|terrifyingly           |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|and                    |24   |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|request                |8    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@DasdemirHilmi:        |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@UberEng:              |8    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|@A5Jn56:               |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|https://t.co/DQyMiQPywq|9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|veterans               |9    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|not                    |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|me                     |9    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|kendisine              |1    |\n|[2018-03-13 03:50:00.0,2018-03-13 04:00:00.0]|hub                    |6    |\n|[2018-03-13 03:55:00.0,2018-03-13 04:05:00.0]|poquedad               |9    |\n+---------------------------------------------+-----------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520830337101_34531003","id":"20180312-045217_984971010","dateCreated":"2018-03-12T04:52:17+0000","dateStarted":"2018-03-13T04:11:22+0000","dateFinished":"2018-03-13T04:11:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:386"},{"text":"%pyspark\nresultWindowed.count()","user":"anonymous","dateUpdated":"2018-03-13T04:06:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520842351460_716940023","id":"20180312-081231_1984434170","dateCreated":"2018-03-12T08:12:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:388","dateFinished":"2018-03-13T04:07:26+0000","dateStarted":"2018-03-13T04:06:06+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1601\n"}]}},{"text":"%pyspark\ntweetquery.stop()\nwordCountsQuery.stop()\nwordCountsQueryWindowed.stop()","user":"anonymous","dateUpdated":"2018-03-13T04:11:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520577326292_-1341893166","id":"20180309-063526_1682969439","dateCreated":"2018-03-09T06:35:26+0000","dateStarted":"2018-03-13T04:11:28+0000","dateFinished":"2018-03-13T04:11:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:387","focus":true},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-03-13T03:57:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520913448152_226444165","id":"20180313-035728_540210339","dateCreated":"2018-03-13T03:57:28+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2831"}],"name":"Spark Structured Streaming with Kafka","id":"2DAC1XUA9","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}