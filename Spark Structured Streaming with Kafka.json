{"paragraphs":[{"text":"%pyspark\nprint spark","user":"anonymous","dateUpdated":"2018-03-12T07:53:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.session.SparkSession object at 0x7fea5297f8d0>\n"}]},"apps":[],"jobName":"paragraph_1520822341881_-1695669927","id":"20180312-023901_1179934232","dateCreated":"2018-03-12T02:39:01+0000","dateStarted":"2018-03-12T07:53:32+0000","dateFinished":"2018-03-12T07:54:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12949"},{"text":"%pyspark\n# Create dataframe representing stream of output from Kafka\ndf = spark.readStream.format('kafka').option('kafka.bootstrap.servers', 'sandbox-hdp.hortonworks.com:6667').option('subscribe', 'tweets').load()\ndf","user":"anonymous","dateUpdated":"2018-03-12T07:54:39+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: binary, value: binary, topic: string, partition: int, offset: bigint, timestamp: timestamp, timestampType: int]\n"}]},"apps":[],"jobName":"paragraph_1520572749020_-1821785006","id":"20180309-051909_1897163451","dateCreated":"2018-03-09T05:19:09+0000","dateStarted":"2018-03-12T07:54:39+0000","dateFinished":"2018-03-12T07:54:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12950"},{"text":"%pyspark\ndf.isStreaming","user":"anonymous","dateUpdated":"2018-03-12T07:54:47+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"True\n"}]},"apps":[],"jobName":"paragraph_1520835684985_776000665","id":"20180312-062124_920112780","dateCreated":"2018-03-12T06:21:24+0000","dateStarted":"2018-03-12T07:54:47+0000","dateFinished":"2018-03-12T07:54:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12951"},{"text":"%pyspark\n# Select desired columns from the dataframe\nds = df.selectExpr('CAST(key AS STRING)', 'timestamp', 'CAST(value AS STRING)')\nds","user":"anonymous","dateUpdated":"2018-03-12T07:54:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: string, timestamp: timestamp, value: string]\n"}]},"apps":[],"jobName":"paragraph_1520576756578_-701277502","id":"20180309-062556_719306702","dateCreated":"2018-03-09T06:25:56+0000","dateStarted":"2018-03-12T07:54:56+0000","dateFinished":"2018-03-12T07:54:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12952"},{"text":"%pyspark\nprint ds.schema","user":"anonymous","dateUpdated":"2018-03-12T07:55:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(key,StringType,true),StructField(timestamp,TimestampType,true),StructField(value,StringType,true)))\n"}]},"apps":[],"jobName":"paragraph_1520575890921_-1874218723","id":"20180309-061130_1402804576","dateCreated":"2018-03-09T06:11:30+0000","dateStarted":"2018-03-12T07:55:02+0000","dateFinished":"2018-03-12T07:55:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12953"},{"text":"%pyspark\n# debugging, write stream to memory\ntweetquery = ds.writeStream.queryName('tweettable').format('memory').start()\ntweetquery","user":"anonymous","dateUpdated":"2018-03-12T07:55:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.streaming.StreamingQuery object at 0x7fea4aea69d0>\n"}]},"apps":[],"jobName":"paragraph_1520576875181_-698235616","id":"20180309-062755_678234353","dateCreated":"2018-03-09T06:27:55+0000","dateStarted":"2018-03-12T07:55:12+0000","dateFinished":"2018-03-12T07:55:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12954"},{"text":"%pyspark\n# getting stream sample from table\nsample = spark.sql('select * from tweettable')\nsample.show()","user":"anonymous","dateUpdated":"2018-03-12T07:56:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------------------+--------------------+\n| key|           timestamp|               value|\n+----+--------------------+--------------------+\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|\n+----+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520576364849_379914525","id":"20180309-061924_1418920442","dateCreated":"2018-03-09T06:19:24+0000","dateStarted":"2018-03-12T07:56:10+0000","dateFinished":"2018-03-12T07:56:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12955"},{"text":"%pyspark\nfrom pyspark.sql.functions import col, from_json\n# extract json schema from the column 'value' in sample dataframe\njson_schema = spark.read.json(sample.rdd.map(lambda row: row.value)).schema\n# to test if the schema is ok, create new column in sample dataframe\nsample = sample.withColumn('json', from_json(col('value'), json_schema))\nsample.show()","user":"anonymous","dateUpdated":"2018-03-12T07:56:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+--------------------+--------------------+--------------------+\n| key|           timestamp|               value|                json|\n+----+--------------------+--------------------+--------------------+\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:53...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:52...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:51...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:51...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:51...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:50...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:50...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:50...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:49...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:48...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:48...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:48...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:54...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:53...|\n|null|2018-03-12 07:55:...|{\"favorite_count\"...|[Mon Mar 12 07:52...|\n+----+--------------------+--------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520576272332_-1516298265","id":"20180309-061752_1684505541","dateCreated":"2018-03-09T06:17:52+0000","dateStarted":"2018-03-12T07:56:17+0000","dateFinished":"2018-03-12T07:56:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12956"},{"text":"%pyspark\n# for testing purposes, it's also possible to run queries through the memory sink in Zeppelin to see the streaming in action\nsample.count()","user":"anonymous","dateUpdated":"2018-03-12T07:56:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"90\n"}]},"apps":[],"jobName":"paragraph_1520829258545_714046298","id":"20180312-043418_1854034352","dateCreated":"2018-03-12T04:34:18+0000","dateStarted":"2018-03-12T07:56:28+0000","dateFinished":"2018-03-12T07:56:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12957"},{"text":"%pyspark\n# streaming data can be observed\nsample.count()","user":"anonymous","dateUpdated":"2018-03-12T07:56:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"105\n"}]},"apps":[],"jobName":"paragraph_1520829345068_695348488","id":"20180312-043545_958489450","dateCreated":"2018-03-12T04:35:45+0000","dateStarted":"2018-03-12T07:56:36+0000","dateFinished":"2018-03-12T07:56:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12958"},{"text":"%pyspark\n# now that we have the json schema, let's get back to the original streaming dataframe, ds, and create the json column\nds = ds.withColumn('json', from_json(col('value'), json_schema))\nds","user":"anonymous","dateUpdated":"2018-03-12T07:56:42+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[key: string, timestamp: timestamp, value: string, json: struct<created_at:string,favorite_count:bigint,favorited:boolean,id:bigint,id_str:string,lang:string,retweet_count:bigint,retweeted:boolean,text:string>]\n"}]},"apps":[],"jobName":"paragraph_1520824635845_1761946369","id":"20180312-031715_375442829","dateCreated":"2018-03-12T03:17:15+0000","dateStarted":"2018-03-12T07:56:42+0000","dateFinished":"2018-03-12T07:56:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12959"},{"text":"%pyspark\nfrom pyspark.sql.functions import explode, split\n# Split tweet text into words\nwords = ds.select(\n    explode(\n        split(ds.json.text, ' ')\n    ).alias('word')\n)","user":"anonymous","dateUpdated":"2018-03-12T08:28:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520576989486_448116892","id":"20180309-062949_1274433372","dateCreated":"2018-03-09T06:29:49+0000","dateStarted":"2018-03-12T08:28:14+0000","dateFinished":"2018-03-12T08:28:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12961"},{"text":"%pyspark\n# generate running word count in the result table wordCount\nwordCount = words.groupby(\n    words.word\n).count()","user":"anonymous","dateUpdated":"2018-03-12T08:28:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520829444778_1355916377","id":"20180312-043724_278815297","dateCreated":"2018-03-12T04:37:24+0000","dateStarted":"2018-03-12T08:28:56+0000","dateFinished":"2018-03-12T08:28:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12962","focus":true},{"text":"%pyspark\nwordCountsQuery = wordCount.writeStream.outputMode('complete').queryName('wordCountsNoWindow').format('memory').start()","user":"anonymous","dateUpdated":"2018-03-12T08:30:16+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520829444013_269770232","id":"20180312-043724_1581116162","dateCreated":"2018-03-12T04:37:24+0000","dateStarted":"2018-03-12T08:30:16+0000","dateFinished":"2018-03-12T08:30:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12963","focus":true},{"text":"%pyspark\n# let's see the wordCounts result\nresult = spark.sql('select * from wordCountsNoWindow')\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-12T08:32:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------------+-----+\n|word                   |count|\n+-----------------------+-----+\n|par                    |1    |\n|laquelle               |1    |\n|gerektiği              |4    |\n|@riana_roses           |8    |\n|got                    |3    |\n|two                    |3    |\n|olup                   |5    |\n|L’Epée                 |4    |\n|within                 |8    |\n|neler                  |5    |\n|@sinanov12:            |3    |\n|@cemre21eser:          |1    |\n|who                    |3    |\n|rid                    |3    |\n|serçe                  |1    |\n|çarpıntısı             |3    |\n|@SuteraJo:             |4    |\n|원칙의                    |4    |\n|bittiğini,             |5    |\n|https://t.co/gLuwHf3YuU|3    |\n+-----------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520829797927_1324243253","id":"20180312-044317_1944344189","dateCreated":"2018-03-12T04:43:17+0000","dateStarted":"2018-03-12T08:32:22+0000","dateFinished":"2018-03-12T08:32:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12964","focus":true},{"text":"%pyspark\n# print the result again to show the differences\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-12T08:32:45+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843447791_-1342275485","id":"20180312-083047_441154557","dateCreated":"2018-03-12T08:30:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15585","dateFinished":"2018-03-12T08:32:45+0000","dateStarted":"2018-03-12T08:32:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------------+-----+\n|word                   |count|\n+-----------------------+-----+\n|par                    |1    |\n|laquelle               |1    |\n|gerektiği              |4    |\n|@riana_roses           |8    |\n|got                    |3    |\n|two                    |3    |\n|olup                   |5    |\n|L’Epée                 |4    |\n|within                 |8    |\n|neler                  |5    |\n|@sinanov12:            |3    |\n|@cemre21eser:          |1    |\n|who                    |3    |\n|rid                    |3    |\n|serçe                  |1    |\n|çarpıntısı             |3    |\n|@SuteraJo:             |4    |\n|원칙의                    |4    |\n|bittiğini,             |5    |\n|https://t.co/gLuwHf3YuU|3    |\n+-----------------------+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\nresult.count()","user":"anonymous","dateUpdated":"2018-03-12T08:32:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843469910_1173258797","id":"20180312-083109_2123597469","dateCreated":"2018-03-12T08:31:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15657","dateFinished":"2018-03-12T08:33:42+0000","dateStarted":"2018-03-12T08:32:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"182\n"}]}},{"text":"%pyspark\nfrom pyspark.sql.functions import explode, split\n# Add timestamp to test window aggregating\n# Split tweet text into words\nwords = ds.select(\n    ds.timestamp,\n    explode(\n        split(ds.json.text, ' ')\n    ).alias('word')\n)","user":"anonymous","dateUpdated":"2018-03-12T08:35:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843272650_-1067209025","id":"20180312-082752_1756640292","dateCreated":"2018-03-12T08:27:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15304","dateFinished":"2018-03-12T08:35:35+0000","dateStarted":"2018-03-12T08:35:35+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom pyspark.sql.functions import window\n# generate running word count in the result table wordCount\nwordCount = words.withWatermark(\n    'timestamp',\n    '10 minutes'\n    ).groupby(\n        window(words.timestamp, '10 minutes', '5 minutes'),\n        words.word\n    ).count()","user":"anonymous","dateUpdated":"2018-03-12T08:35:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843305430_-1891863836","id":"20180312-082825_1332752664","dateCreated":"2018-03-12T08:28:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15372","dateFinished":"2018-03-12T08:35:41+0000","dateStarted":"2018-03-12T08:35:41+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nwordCountsQuery = wordCount.writeStream.outputMode('update').queryName('wordCounts').format('memory').start()","user":"anonymous","dateUpdated":"2018-03-12T08:36:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843342319_-2069171782","id":"20180312-082902_196080245","dateCreated":"2018-03-12T08:29:02+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15432","dateFinished":"2018-03-12T08:35:46+0000","dateStarted":"2018-03-12T08:35:46+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8513320904251788900.py\", line 367, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8513320904251788900.py\", line 360, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/hdp/current/spark2-client/python/pyspark/sql/streaming.py\", line 842, in start\n    return self._sq(self._jwrite.start())\n  File \"/usr/hdp/current/spark2-client/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py\", line 1133, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/hdp/current/spark2-client/python/pyspark/sql/utils.py\", line 79, in deco\n    raise IllegalArgumentException(s.split(': ', 1)[1], stackTrace)\nIllegalArgumentException: u'Cannot start query with name wordCounts as a query with that name is already active'\n\n"}]}},{"text":"%pyspark\n# let's see the wordCounts result\nresult = spark.sql('select * from wordCounts')\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-12T08:35:52+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520843426349_-836346005","id":"20180312-083026_2088170957","dateCreated":"2018-03-12T08:30:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15513","dateFinished":"2018-03-12T08:35:53+0000","dateStarted":"2018-03-12T08:35:52+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------------------------------+--------------------------------------------------------------------------------+-----+\n|window                                       |word                                                                            |count|\n+---------------------------------------------+--------------------------------------------------------------------------------+-----+\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|#fabulism                                                                       |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|veces                                                                           |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|@DaiIyPets:                                                                     |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|Mektuplar                                                                       |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|finish!                                                                         |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|at                                                                              |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|açıklayamam                                                                     |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|https://t.co/o289IftoOM                                                         |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|por                                                                             |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|dziennikarz                                                                     |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|https://t.co/6fU4SBavf6                                                         |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|Irreal.bit./ly/2Cp7hVG                                                          |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|altına                                                                          |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|arkadaşını                                                                      |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|have                                                                            |10   |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|niemieckie😂😂😂                                                                |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|turned                                                                          |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|そうなんや。それはそれはたくさん釣れそうなアプリやな笑。カフカちゃん、そういう男の子の真似するの、上手そうだもの(・∀・)わたしもやってたら釣られてそうやわ笑。|5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|olsun,                                                                          |10   |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|oku                                                                             |5    |\n+---------------------------------------------+--------------------------------------------------------------------------------+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\n# print the result again to show the differences\nresult.show(20, False)","user":"anonymous","dateUpdated":"2018-03-12T08:37:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------------------------------+--------------------------------------------------------------------------------+-----+\n|window                                       |word                                                                            |count|\n+---------------------------------------------+--------------------------------------------------------------------------------+-----+\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|#fabulism                                                                       |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|veces                                                                           |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|@DaiIyPets:                                                                     |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|Mektuplar                                                                       |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|finish!                                                                         |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|at                                                                              |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|açıklayamam                                                                     |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|https://t.co/o289IftoOM                                                         |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|por                                                                             |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|dziennikarz                                                                     |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|https://t.co/6fU4SBavf6                                                         |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|Irreal.bit./ly/2Cp7hVG                                                          |5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|altına                                                                          |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|arkadaşını                                                                      |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|have                                                                            |10   |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|niemieckie😂😂😂                                                                |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|turned                                                                          |5    |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|そうなんや。それはそれはたくさん釣れそうなアプリやな笑。カフカちゃん、そういう男の子の真似するの、上手そうだもの(・∀・)わたしもやってたら釣られてそうやわ笑。|5    |\n|[2018-03-12 08:10:00.0,2018-03-12 08:20:00.0]|olsun,                                                                          |10   |\n|[2018-03-12 08:05:00.0,2018-03-12 08:15:00.0]|oku                                                                             |5    |\n+---------------------------------------------+--------------------------------------------------------------------------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1520830337101_34531003","id":"20180312-045217_984971010","dateCreated":"2018-03-12T04:52:17+0000","dateStarted":"2018-03-12T08:37:11+0000","dateFinished":"2018-03-12T08:37:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12965"},{"text":"%pyspark\nwordCountsQuery.stop()","user":"anonymous","dateUpdated":"2018-03-12T08:38:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520577326292_-1341893166","id":"20180309-063526_1682969439","dateCreated":"2018-03-09T06:35:26+0000","dateStarted":"2018-03-12T08:38:15+0000","dateFinished":"2018-03-12T08:38:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12966"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-03-12T08:12:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520842351460_716940023","id":"20180312-081231_1984434170","dateCreated":"2018-03-12T08:12:31+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15068"}],"name":"Spark Structured Streaming with Kafka","id":"2DAC1XUA9","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{},"checkpoint":{"message":"add window"}}